# Docker Compose configuration for Agent Environment dev container
#
# Services:
#   - devcontainer: Main development environment with mounted workspaces
#   - otlp: OpenTelemetry collector for telemetry data
#
# Volumes:
#   - gh-auth: Named volume for GitHub CLI credentials
#   - claude-config: Named volume for Claude configuration
#   - gemini-config: Named volume for Gemini configuration
#
# Note: All services start automatically when devcontainer is opened
#       (runServices defaults to all when not specified)
#
# To disable OTLP telemetry:
#   - Add to devcontainer.json: "runServices": ["devcontainer"]
#   - Or set environment: DISABLE_OTLP=true (requires devcontainer rebuild)

volumes:
  gh-auth:
  claude-config:
  gemini-config:

services:
  devcontainer:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ../..:/workspaces:cached
      - claude-config:/home/codespace/.claude
      - gemini-config:/home/codespace/.gemini
      - gh-auth:/home/codespace/.config/gh
    command: sleep infinity
    environment:
      - CLAUDE_CODE_ENABLE_TELEMETRY=1
      - OTEL_SERVICE_NAME=claude-code
      - OTEL_METRICS_EXPORTER=otlp
      - OTEL_LOGS_EXPORTER=otlp
      - OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otlp:4318

  otlp:
    image: otel/opentelemetry-collector:latest
    restart: unless-stopped
    profiles:
      - with-telemetry
    ports:
      - "4317:4317"  # OTLP gRPC receiver
      - "4318:4318"  # OTLP HTTP receiver
      - "13133:13133"  # Health check endpoint
    volumes:
      - ./otel-config.yaml:/etc/otel-collector-config.yaml
    command: ["--config=/etc/otel-collector-config.yaml"]
    environment:
      - HONEYCOMB_API_KEY=${HONEYCOMB_API_KEY}
      - HONEYCOMB_DATASET=${HONEYCOMB_DATASET:-claude-code}
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:13133"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 10s